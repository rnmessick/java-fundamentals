/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basicLibrary;

import java.util.*;

public class Library {

    public boolean someLibraryMethod() {
        return true;
    }

    public static int[] roll(int n) {
        // we know die has six sides
        int numSides = 6;
        int roll = 0;
        int rollVal = 0;
        int[] allRollsArr = new int[n];

        //  creating a fair die
        Random sideOfDie = new Random();
        for (int i = 0; i < n; i++) {
            roll = sideOfDie.nextInt(numSides) + 1;
            allRollsArr[i] = roll;
            rollVal = rollVal + roll;

        }
//        System.out.println(Arrays.toString(allRollsArr));
        return allRollsArr;
    }

    public static boolean containsDuplicates(int[] arr) {
        boolean duplicates = false;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    duplicates = true;
                }
            }
        }
        return duplicates;
    }

    //get averages method -helper function to be called later
    public static double getAverage(int[] arr) {
        int total = 0;
        for (int i = 0; i < arr.length; i++) {
            total += arr[i];
        }
        return total / arr.length;    }

    // Calculating all averages
    public static int[] getLowestAverage(int[][] arrs) {
        int[] bestSoFar = arrs[0];
        for (int[] currentArray : arrs) {
            if (getAverage(currentArray) < getAverage((bestSoFar))) {
                bestSoFar = currentArray;
            }
        }
        return bestSoFar;
    }

    public static String analyzeWeatherData(int[][] weeklyMonthTemperatures) {
        int lowestTemp = weeklyMonthTemperatures[0][0];
        int highestTemp = weeklyMonthTemperatures[0][0];

        // HashSet
        HashSet<Integer> temps = new HashSet<>();

        // Iterate through a data set and fill HashSet
        for (int[] weeklyMonthTemperature : weeklyMonthTemperatures) {
            for (int i : weeklyMonthTemperature) {
                temps.add(i);

                if (i < lowestTemp) {
                    lowestTemp = i;
                }
                if (i > highestTemp) {
                    highestTemp = i;
                }
            }
        }
        String message = String.format("High: %d %nLow: %d", highestTemp, lowestTemp);

        // Now to reveal which temps are not in the data set

        for (int i = lowestTemp; i < highestTemp; i++) {
            if (!temps.contains(i)) {
                message += String.format("%nNever saw temperature: %d", i);
            }
        }
        return message;
    }
}
